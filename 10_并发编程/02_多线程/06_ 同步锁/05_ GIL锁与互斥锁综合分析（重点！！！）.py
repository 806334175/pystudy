#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2020/1/8 下午6:07
# @Author  : Ryu
# @Site    : 
# @File    : 05_ GIL锁与互斥锁综合分析（重点！！！）.py
# @Software: PyCharm


# 分析：
# 　　#1.100个线程去抢GIL锁，即抢执行权限
#      #2. 肯定有一个线程先抢到GIL（暂且称为线程1），然后开始执行，一旦执行就会拿到lock.acquire()
#      #3. 极有可能线程1还未运行完毕，就有另外一个线程2抢到GIL，然后开始运行，但线程2发现互斥锁lock还未被线程1释放，于是阻塞，被迫交出执行权限，即释放GIL
#     #4.直到线程1重新抢到GIL，开始从上次暂停的位置继续执行，直到正常释放互斥锁lock，然后其他的线程再重复2 3 4的过程
#
# GIL锁与互斥锁综合分析（重点！！！）